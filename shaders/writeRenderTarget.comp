#version 460
#extension GL_ARB_separate_shader_objects : enable
#extension GL_EXT_scalar_block_layout : require

#define WORKGROUP_SIZE 1
layout (local_size_x = WORKGROUP_SIZE, local_size_y = WORKGROUP_SIZE, local_size_z = 1 ) in;

layout(set = 0, binding = 0, rgba8) uniform writeonly image2D targetImage;

// layout(push_constant) uniform InTransform {
//     float in_x;
// };

// layout(std140, binding = 0) buffer buf
// {
//    Pixel imageData[];
// };

void main() {

//   if(gl_GlobalInvocationID.x >= WIDTH || gl_GlobalInvocationID.y >= HEIGHT)
//     return;

    ivec2 pos = ivec2(gl_GlobalInvocationID.xy);
    imageStore(targetImage, pos, ivec4(.7, .6, .1, 1.0));
    // instance_data[gl_GlobalInvocationID.x].pos = vec3(371.0 + in_x, -290.0, -1.0);
    // vec3 pos = instance_data[gl_GlobalInvocationID.x].pos;
    // if (gl_GlobalInvocationID.x == 0)
    // instance_data[gl_GlobalInvocationID.x].pos.x = pos.x + in_x;
    // instance_data[gl_GlobalInvocationID.x].rot = vec3(0.0, 0.0, 0.0);
    // instance_data[gl_GlobalInvocationID.x].scale = vec3(0.1, 0.1, 0.1);
    // instance_data[gl_GlobalInvocationID.x].tex_idx = 0;
}